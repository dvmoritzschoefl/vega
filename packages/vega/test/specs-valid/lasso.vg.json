{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 200,
    "height": 200,
    "style": "cell",
    "data": [
      {
        "name": "brush_store",
        "values": [
          {
            "fields": [{"type": "E", "field": "_vgsid_"}],
            "values": [[]]
          }
        ]
      },
      {
        "name": "source_0",
        "url": "data/cars.json",
        "format": {"type": "json"},
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"]) && isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"])"
          },
          {
            "type": "identifier",
            "as": "_vgsid_"
          }
        ]
      }
    ],
    "signals": [
      {
        "name": "unit",
        "value": {},
        "on": [
          {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
        ]
      },
      {
        "name": "brush",
        "update": "vlSelectionResolve(\"brush_store\", \"union\")"
      },
      {
        "name": "hehe_screen_path",
        "init": "[]",
        "on": [
          {
            "events": {
              "source": "scope",
              "type": "mousedown",
              "consume": true
            },
            "update": "[[x(), y()]]"
          },
          {
            "events": {
              "source": "window",
              "type": "mousemove",
              "consume": true,
              "between": [
                {"source": "scope", "type": "mousedown"},
                {"source": "window", "type": "mouseup"}
              ]
            },
            "update": "lassoAppend(hehe_screen_path, clamp(x(), 0, width), clamp(y(), 0, height))"
          }
        ]
      },
      {
        "name": "brush_selectionids",
        "on": [
          {
            "events": [{"signal": "hehe_screen_path"}],
            "update": "invertLasso(\"marks\", hehe_screen_path, \"x\", \"Horsepower\", \"y\", \"Miles_per_Gallon\")"
          }
        ]
      },
      {
        "name": "brush_tuple",
        "on": [
          {
            "events": [{"signal": "brush_selectionids"}],
            "update": "brush_selectionids ? {unit: \"\", fields: brush_tuple_fields, values: [brush_selectionids]} : null"
          }
        ]
      },
      {
        "name": "brush_tuple_fields",
        "value": [
          {"field": "_vgsid_", "type": "E"}
        ]
      },
      {
        "name": "brush_modify",
        "on": [
          {
            "events": {"signal": "brush_tuple"},
            "update": "modify(\"brush_store\", brush_tuple, true)"
          }
        ]
      }
    ],
    "marks": [
      {
        "name": "hehe_brush",
        "type": "path",
        "encode": {
          "enter": {
            "fill": {"value": "#333"},
            "fillOpacity": {"value": 0.125},
            "stroke": {"value": "gray"},
            "strokeWidth": {"value": 2},
            "strokeDash": {"value": [8, 5]}
          },
          "update": {
            "path": {
              "test": true,
              "signal": "lassoPath(hehe_screen_path)"
            }
          }
        }
      },
      {
        "name": "marks",
        "type": "symbol",
        "style": ["point"],
        "interactive": true,
        "from": {"data": "source_0"},
        "encode": {
          "update": {
            "opacity": {"value": 0.7},
            "fill": {"value": "transparent"},
            "stroke": [
              {
                "test": "!length(data(\"brush_store\")) || vlSelectionTest(\"brush_store\", datum)",
                "scale": "color",
                "field": "Cylinders"
              },
              {"value": "grey"}
            ],
            "ariaRoleDescription": {"value": "point"},
            "description": {
              "signal": "\"Horsepower: \" + (format(datum[\"Horsepower\"], \"\")) + \"; Miles_per_Gallon: \" + (format(datum[\"Miles_per_Gallon\"], \"\")) + \"; Cylinders: \" + (isValid(datum[\"Cylinders\"]) ? datum[\"Cylinders\"] : \"\"+datum[\"Cylinders\"])"
            },
            "x": {"scale": "x", "field": "Horsepower"},
            "y": {"scale": "y", "field": "Miles_per_Gallon"}
          }
        }
      }
    ],
    "scales": [
      {
        "name": "x",
        "type": "linear",
        "domain": {"data": "source_0", "field": "Horsepower"},
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": true
      },
      {
        "name": "y",
        "type": "linear",
        "domain": {"data": "source_0", "field": "Miles_per_Gallon"},
        "range": [{"signal": "height"}, 0],
        "nice": true,
        "zero": true
      },
      {
        "name": "color",
        "type": "ordinal",
        "domain": {"data": "source_0", "field": "Cylinders", "sort": true},
        "range": "ordinal",
        "interpolate": "hcl"
      }
    ],
    "axes": [
      {
        "scale": "x",
        "orient": "bottom",
        "gridScale": "y",
        "grid": true,
        "tickCount": {"signal": "ceil(width/40)"},
        "domain": false,
        "labels": false,
        "aria": false,
        "maxExtent": 0,
        "minExtent": 0,
        "ticks": false,
        "zindex": 0
      },
      {
        "scale": "y",
        "orient": "left",
        "gridScale": "x",
        "grid": true,
        "tickCount": {"signal": "ceil(height/40)"},
        "domain": false,
        "labels": false,
        "aria": false,
        "maxExtent": 0,
        "minExtent": 0,
        "ticks": false,
        "zindex": 0
      },
      {
        "scale": "x",
        "orient": "bottom",
        "grid": false,
        "title": "Horsepower",
        "labelFlush": true,
        "labelOverlap": true,
        "tickCount": {"signal": "ceil(width/40)"},
        "zindex": 0
      },
      {
        "scale": "y",
        "orient": "left",
        "grid": false,
        "title": "Miles_per_Gallon",
        "labelOverlap": true,
        "tickCount": {"signal": "ceil(height/40)"},
        "zindex": 0
      }
    ],
    "legends": [
      {
        "stroke": "color",
        "symbolType": "circle",
        "title": "Cylinders",
        "encode": {
          "symbols": {
            "update": {
              "fill": {"value": "transparent"},
              "opacity": {"value": 0.7}
            }
          }
        }
      }
    ]
  }